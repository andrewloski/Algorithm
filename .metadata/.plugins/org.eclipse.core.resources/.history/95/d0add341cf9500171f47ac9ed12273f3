package code;

public class EightQueen {
	
	public static void main(String[] args) {
		int[] array = {0, 1, 2, 3, 4, 5, 6, 7, 8};
		permutationEightQueen(array);
	}
	
	public static void permutationEightQueen(int[] a) {
		System.out.println("共有" + permutationEightQueen(a, 0) + "种排列方法。");
	}
	
	private static int permutationEightQueen(int[] a, int i) {
		int count = 0;
		int temp;
		int[] d;
		if (i < a.length - 1) {
			for (int j = i; j < a.length; j++) {
				d = a.clone();
				if (i != j) {
					temp = d[i];
					d[i] = d[j];
					d[j] = temp;
					if (judgmentEightQueen(d)) {
						show(d);
						count++;
					}
				} else if (i == 0) {
					if (judgmentEightQueen(d)) {
						show(d);
						count++;
					}
				}
				count += permutationEightQueen(d, i + 1);
			}
		}
		return count;
	}
	
	//判断当前情况是否符合条件
	private static boolean judgmentEightQueen(int[] a) {
		for (int i = 0; i < a.length - 1; i++) {
			for (int j = i + 1; j < a.length; j++) {
				int var = j - i;
				if (a[i] + var == a[j] || a[i] - var == a[j]) {
					return false;
				}
			}
		}
		return true;
	}
	
	//输出符合条件的结果
	private static void show(int[] a) {
		for (int i = 0; i < a.length; i++) {
			for (int j = 0; j < a.length; j++) {
				if (a[j] == i) {
					System.out.print(1);
				} else {
					System.out.print(0);
				}
			}
			System.out.print("\n");
		}
		System.out.print("\n");
	}

}
